// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Events You May Like component should matchsnapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Consumer>
    [Function]
  </Consumer>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Styled(Row)>
          <styled.h1>
            You may also like
          </styled.h1>
          <styled.a
            href="/events"
          >
            View all
            <styled.span>
               events
            </styled.span>
             
            <ChevronRight />
          </styled.a>
        </Styled(Row)>,
        <Row>
          <Styled(Column)
            width={
              Array [
                1,
                0.5,
                0.3333333333333333,
                0.3333333333333333,
              ]
            }
          >
            <EventListingCard
              event={
                Object {
                  "eventsListPicture": Object {
                    "file": Object {
                      "url": "123123",
                    },
                  },
                  "id": "123",
                  "startTime": "2035-06-02T13:30+01:00",
                }
              }
            />
          </Styled(Column)>
        </Row>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.h1>
              You may also like
            </styled.h1>,
            <styled.a
              href="/events"
            >
              View all
              <styled.span>
                 events
              </styled.span>
               
              <ChevronRight />
            </styled.a>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "You may also like",
            },
            "ref": null,
            "rendered": "You may also like",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "View all",
                <styled.span>
                   events
                </styled.span>,
                " ",
                <ChevronRight />,
              ],
              "href": "/events",
            },
            "ref": null,
            "rendered": Array [
              "View all",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": " events",
                },
                "ref": null,
                "rendered": " events",
                "type": [Function],
              },
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Styled(Column)
              width={
                Array [
                  1,
                  0.5,
                  0.3333333333333333,
                  0.3333333333333333,
                ]
              }
            >
              <EventListingCard
                event={
                  Object {
                    "eventsListPicture": Object {
                      "file": Object {
                        "url": "123123",
                      },
                    },
                    "id": "123",
                    "startTime": "2035-06-02T13:30+01:00",
                  }
                }
              />
            </Styled(Column)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "123",
            "nodeType": "class",
            "props": Object {
              "children": <EventListingCard
                event={
                  Object {
                    "eventsListPicture": Object {
                      "file": Object {
                        "url": "123123",
                      },
                    },
                    "id": "123",
                    "startTime": "2035-06-02T13:30+01:00",
                  }
                }
              />,
              "width": Array [
                1,
                0.5,
                0.3333333333333333,
                0.3333333333333333,
              ],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "event": Object {
                  "eventsListPicture": Object {
                    "file": Object {
                      "url": "123123",
                    },
                  },
                  "id": "123",
                  "startTime": "2035-06-02T13:30+01:00",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(Row)>
            <styled.h1>
              You may also like
            </styled.h1>
            <styled.a
              href="/events"
            >
              View all
              <styled.span>
                 events
              </styled.span>
               
              <ChevronRight />
            </styled.a>
          </Styled(Row)>,
          <Row>
            <Styled(Column)
              width={
                Array [
                  1,
                  0.5,
                  0.3333333333333333,
                  0.3333333333333333,
                ]
              }
            >
              <EventListingCard
                event={
                  Object {
                    "eventsListPicture": Object {
                      "file": Object {
                        "url": "123123",
                      },
                    },
                    "id": "123",
                    "startTime": "2035-06-02T13:30+01:00",
                  }
                }
              />
            </Styled(Column)>
          </Row>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.h1>
                You may also like
              </styled.h1>,
              <styled.a
                href="/events"
              >
                View all
                <styled.span>
                   events
                </styled.span>
                 
                <ChevronRight />
              </styled.a>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "You may also like",
              },
              "ref": null,
              "rendered": "You may also like",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "View all",
                  <styled.span>
                     events
                  </styled.span>,
                  " ",
                  <ChevronRight />,
                ],
                "href": "/events",
              },
              "ref": null,
              "rendered": Array [
                "View all",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": " events",
                  },
                  "ref": null,
                  "rendered": " events",
                  "type": [Function],
                },
                " ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Styled(Column)
                width={
                  Array [
                    1,
                    0.5,
                    0.3333333333333333,
                    0.3333333333333333,
                  ]
                }
              >
                <EventListingCard
                  event={
                    Object {
                      "eventsListPicture": Object {
                        "file": Object {
                          "url": "123123",
                        },
                      },
                      "id": "123",
                      "startTime": "2035-06-02T13:30+01:00",
                    }
                  }
                />
              </Styled(Column)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "123",
              "nodeType": "class",
              "props": Object {
                "children": <EventListingCard
                  event={
                    Object {
                      "eventsListPicture": Object {
                        "file": Object {
                          "url": "123123",
                        },
                      },
                      "id": "123",
                      "startTime": "2035-06-02T13:30+01:00",
                    }
                  }
                />,
                "width": Array [
                  1,
                  0.5,
                  0.3333333333333333,
                  0.3333333333333333,
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "event": Object {
                    "eventsListPicture": Object {
                      "file": Object {
                        "url": "123123",
                      },
                    },
                    "id": "123",
                    "startTime": "2035-06-02T13:30+01:00",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "__styled-components__": [Function],
      "__styled-components__next__": Object {
        "getTheme": [Function],
        "subscribe": [Function],
        "unsubscribe": [Function],
      },
    },
  },
}
`;
