// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ImageBanner should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ImageBanner
    altText=""
    color=""
    imageSrc=""
    subtitleText=""
    titleText=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        "",
        <div>
          <StyledBannerTitle>
            
          </StyledBannerTitle>
          <StyledBannerSubtitle>
            
          </StyledBannerSubtitle>
        </div>,
      ],
      "color": "",
    },
    "ref": null,
    "rendered": Array [
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <StyledBannerTitle>
              
            </StyledBannerTitle>,
            <StyledBannerSubtitle>
              
            </StyledBannerSubtitle>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          "",
          <div>
            <StyledBannerTitle>
              
            </StyledBannerTitle>
            <StyledBannerSubtitle>
              
            </StyledBannerSubtitle>
          </div>,
        ],
        "color": "",
      },
      "ref": null,
      "rendered": Array [
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <StyledBannerTitle>
                
              </StyledBannerTitle>,
              <StyledBannerSubtitle>
                
              </StyledBannerSubtitle>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "",
              },
              "ref": null,
              "rendered": "",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "",
              },
              "ref": null,
              "rendered": "",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`ImageBanner should render the subtitleText from props to BannerTitle  1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ImageBanner
    altText=""
    color=""
    imageSrc=""
    subtitleText="And here is a test subtitle!"
    titleText=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        "",
        <div>
          <StyledBannerTitle>
            
          </StyledBannerTitle>
          <StyledBannerSubtitle>
            And here is a test subtitle!
          </StyledBannerSubtitle>
        </div>,
      ],
      "color": "",
    },
    "ref": null,
    "rendered": Array [
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <StyledBannerTitle>
              
            </StyledBannerTitle>,
            <StyledBannerSubtitle>
              And here is a test subtitle!
            </StyledBannerSubtitle>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "And here is a test subtitle!",
            },
            "ref": null,
            "rendered": "And here is a test subtitle!",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          "",
          <div>
            <StyledBannerTitle>
              
            </StyledBannerTitle>
            <StyledBannerSubtitle>
              And here is a test subtitle!
            </StyledBannerSubtitle>
          </div>,
        ],
        "color": "",
      },
      "ref": null,
      "rendered": Array [
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <StyledBannerTitle>
                
              </StyledBannerTitle>,
              <StyledBannerSubtitle>
                And here is a test subtitle!
              </StyledBannerSubtitle>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "",
              },
              "ref": null,
              "rendered": "",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "And here is a test subtitle!",
              },
              "ref": null,
              "rendered": "And here is a test subtitle!",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`ImageBanner should render the titleText from props to BannerTitle  1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ImageBanner
    altText=""
    color=""
    imageSrc=""
    subtitleText=""
    titleText="Here is a test title!"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        "",
        <div>
          <StyledBannerTitle>
            Here is a test title!
          </StyledBannerTitle>
          <StyledBannerSubtitle>
            
          </StyledBannerSubtitle>
        </div>,
      ],
      "color": "",
    },
    "ref": null,
    "rendered": Array [
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <StyledBannerTitle>
              Here is a test title!
            </StyledBannerTitle>,
            <StyledBannerSubtitle>
              
            </StyledBannerSubtitle>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Here is a test title!",
            },
            "ref": null,
            "rendered": "Here is a test title!",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          "",
          <div>
            <StyledBannerTitle>
              Here is a test title!
            </StyledBannerTitle>
            <StyledBannerSubtitle>
              
            </StyledBannerSubtitle>
          </div>,
        ],
        "color": "",
      },
      "ref": null,
      "rendered": Array [
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <StyledBannerTitle>
                Here is a test title!
              </StyledBannerTitle>,
              <StyledBannerSubtitle>
                
              </StyledBannerSubtitle>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Here is a test title!",
              },
              "ref": null,
              "rendered": "Here is a test title!",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "",
              },
              "ref": null,
              "rendered": "",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
